def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader('UTF-8') { reader ->
    localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
  throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
  flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
  flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
  compileSdkVersion 30

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

  defaultConfig {
    // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
    applicationId "com.kevin.metro_app"
    minSdkVersion 21
    targetSdkVersion 30
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
//    ndk {
//      abiFilters "armeabi-v7a"
//    }
  }

  signingConfigs {
    releaseConfig {
      storeFile file("./CyclingApp.keystore")
      storePassword "wade..900813"
      keyAlias "CyclingAppAlias"
      keyPassword "wade..900813"
    }
    debugConfig {
      storeFile file("./CyclingApp.keystore")
      storePassword "wade..900813"
      keyAlias "CyclingAppAlias"
      keyPassword "wade..900813"
    }
  }

  buildTypes {
    release {
      // TODO: Add your own signing config for the release build.
      // Signing with the debug keys for now, so `flutter run --release` works.
      minifyEnabled true
      zipAlignEnabled true
      shrinkResources true
      useProguard true
      signingConfig signingConfigs.releaseConfig
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
    }
    debugConfig {
      signingConfig signingConfigs.debugConfig
    }
  }

  lintOptions {
    disable 'InvalidPackage'
    checkReleaseBuilds false //<- add this line
  }

  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
    }
  }
}

flutter {
  source '../..'
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'com.amap.api:location:latest.integration'
//  implementation 'com.amap.api:3dmap:latest.integration'
  // implementation 'com.amap.api:map2d:latest.integration'
  implementation 'com.amap.api:navi-3dmap:latest.integration'
  implementation 'com.amap.api:search:latest.integration'
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'com.google.android.material:material:1.2.1'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
}
